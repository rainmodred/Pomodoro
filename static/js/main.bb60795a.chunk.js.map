{"version":3,"sources":["components/Pomodoro/Pomodoro.module.css","components/SettingsModal/SettingsModal.module.css","components/Timer/Timer.module.css","components/NumberInput/NumberInput.module.css","components/Clock/Clock.module.css","components/ProgressRing/ProgressRing.module.css","utils/utils.tsx","context/SettingsContext.tsx","components/NumberInput/NumberInput.tsx","components/VolumeSlider/VolumeSlider.tsx","components/Pomodoro/useSound.tsx","constants.ts","components/Pomodoro/useTimer.tsx","components/SettingsModal/SettingsModal.tsx","components/Clock/Clock.tsx","components/ProgressRing/ProgressRing.tsx","components/Timer/Timer.tsx","components/Pomodoro/Pomodoro.tsx","App.tsx","index.tsx"],"names":["module","exports","setToStorage","key","value","window","localStorage","setItem","JSON","stringify","timeToMinSec","time","minutesNumber","Math","floor","secondsNumber","minutes","toString","seconds","root","document","documentElement","initialSettings","timers","label","selectedColor","sound","name","volume","autostart","notification","getInitialState","data","getItem","parse","getFromStrorage","reducer","state","action","updatedSettings","type","payload","color","Error","SettingsContext","createContext","SettingsProvider","children","useReducer","settings","dispatch","useEffect","Notification","requestPermission","then","permission","style","setProperty","Provider","useSettings","context","useContext","NumberInput","min","max","onChange","className","styles","container","htmlFor","input","id","e","target","VolumeSlider","handleChange","debouncedHandler","useMemo","debounce","step","map","useSound","src","duration","useState","isPlaying","setIsPlaying","newAudio","Audio","audio","play","useCallback","timerId","setTimeout","pause","currentTime","clearTimeout","Status","sounds","Ding","colors","SettingsModal","isOpen","close","reduce","prev","curr","setTimers","colorsList","checked","setColors","soundsList","Object","keys","currentSound","setCurrentSound","setVolume","setAutostart","setNotification","handleTimerChange","handleChangeColor","onDismiss","header","heading","onClick","breakLine","form","onSubmit","preventDefault","entries","Number","find","settingsItem","subHeading","colorsInputs","role","radio","radioInput","radioControl","backgroundColor","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","soundItem","soundSubheading","handleSoundChange","portal","as","zIndex","autoStartWrapper","buttonsWrapper","button","submit","reset","Clock","clock","semicolon","ProgressRing","radius","progress","normalizedRadius","circumference","PI","strokeDashoffset","progressRing","strokeDasharray","r","cx","cy","Timer","statusText","initialTime","toggle","setProgress","wrapper","disabled","timer","status","Pomodoro","selectedTabIndex","setSelectedTabIndex","selectedTimer","pomoroCounter","useRef","autoplay","setAutoplay","startNextTimer","current","onTimeEnd","body","silent","Paused","setStatus","setCurrentTime","Started","setInterval","clearInterval","useTimer","showDialog","setShowDialog","title","handleKeyDown","code","addEventListener","removeEventListener","tabList","tabIndex","tab","selectedTab","tabPanel","footer","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb60795a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pomodoro_container__2uMDo\",\"heading\":\"Pomodoro_heading__h-gbR\",\"footer\":\"Pomodoro_footer__2Zxie\",\"tabList\":\"Pomodoro_tabList__2DlED\",\"tab\":\"Pomodoro_tab__3LbO2\",\"selectedTab\":\"Pomodoro_selectedTab__2La1y\",\"tabPanel\":\"Pomodoro_tabPanel__DtehD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breakLine\":\"SettingsModal_breakLine__3H9tB\",\"header\":\"SettingsModal_header__n9kzT\",\"close\":\"SettingsModal_close__29gOg\",\"heading\":\"SettingsModal_heading__w4mSa\",\"subHeading\":\"SettingsModal_subHeading__2AAJ8\",\"form\":\"SettingsModal_form__1EOFt\",\"settingsItem\":\"SettingsModal_settingsItem__1ghdv\",\"time\":\"SettingsModal_time__19GqO\",\"buttonsWrapper\":\"SettingsModal_buttonsWrapper__3ZvrO\",\"button\":\"SettingsModal_button__2ZeM3\",\"colors\":\"SettingsModal_colors__2dlnP\",\"colorsInputs\":\"SettingsModal_colorsInputs__2CcZx\",\"radio\":\"SettingsModal_radio__1SVIV\",\"radioInput\":\"SettingsModal_radioInput__1PFsk\",\"radioControl\":\"SettingsModal_radioControl__3S7_6\",\"soundItem\":\"SettingsModal_soundItem__1jFn5\",\"soundSubheading\":\"SettingsModal_soundSubheading__11oK0\",\"soundSelect\":\"SettingsModal_soundSelect__2EksQ\",\"autoStartWrapper\":\"SettingsModal_autoStartWrapper__C1RP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Timer_container__3Iyff\",\"wrapper\":\"Timer_wrapper__3nqQO\",\"timer\":\"Timer_timer__1-RMC\",\"status\":\"Timer_status__aX9J8\",\"reset\":\"Timer_reset__1WPsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NumberInput_container__X_BBb\",\"label\":\"NumberInput_label__1UD3R\",\"input\":\"NumberInput_input__31-0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"Clock_clock__33oSO\",\"semicolon\":\"Clock_semicolon__3GSmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressRing\":\"ProgressRing_progressRing__2nNiF\"};","function getFromStrorage(key: string) {\n  const data = window.localStorage.getItem(key);\n  if (!data) {\n    return null;\n  }\n  return JSON.parse(data);\n}\n\nfunction setToStorage<T>(key: string, value: T) {\n  window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction timeToMinSec(time: number) {\n  const minutesNumber = Math.floor(time / 60);\n  const secondsNumber = time % 60;\n\n  const minutes =\n    minutesNumber < 10 ? `0${minutesNumber}` : minutesNumber.toString();\n  const seconds =\n    secondsNumber < 10 ? `0${secondsNumber}` : secondsNumber.toString();\n\n  return {\n    minutes,\n    seconds,\n  };\n}\n\nexport { getFromStrorage, setToStorage, timeToMinSec };\n","import { createContext, useContext, useEffect, useReducer } from 'react';\nimport { getFromStrorage, setToStorage } from '../utils/utils';\nimport { Colors, Sounds } from '../constants';\n\nlet root = document.documentElement;\n\ntype TimerType = {\n  label: string;\n  time: number;\n};\n\ntype Settings = {\n  timers: TimerType[];\n  selectedColor: Colors;\n  sound: {\n    name: Sounds;\n    volume: number;\n  };\n  autostart: boolean;\n  notification: boolean;\n};\n\ntype ACTIONTYPE =\n  | {\n      type: 'updateSound';\n      payload: {\n        name: Sounds;\n        volume: number;\n      };\n    }\n  | {\n      type: 'updateColor';\n      payload: Colors;\n    }\n  | {\n      type: 'updateTimers';\n      payload: TimerType[];\n    }\n  | {\n      type: 'updateAutostart';\n      payload: boolean;\n    }\n  | {\n      type: 'updateNotification';\n      payload: boolean;\n    };\n\nexport const initialSettings: Settings = {\n  timers: [\n    { label: 'pomodoro', time: 1500 },\n    { label: 'short break', time: 300 },\n    { label: 'long break', time: 600 },\n  ],\n\n  selectedColor: '#f67174',\n  sound: {\n    name: 'Analog Alarm',\n    volume: 50,\n  },\n  autostart: true,\n  notification: true,\n};\n\nfunction getInitialState() {\n  return getFromStrorage('settings') || initialSettings;\n}\n\nfunction reducer(state: typeof initialSettings, action: ACTIONTYPE) {\n  let updatedSettings: Settings | null = null;\n\n  switch (action.type) {\n    case 'updateTimers':\n      const timers = action.payload;\n      updatedSettings = {\n        ...state,\n        timers,\n      };\n      setToStorage('settings', updatedSettings);\n      return updatedSettings;\n    case 'updateColor':\n      const color = action.payload;\n      updatedSettings = {\n        ...state,\n        selectedColor: color,\n      };\n      setToStorage('settings', updatedSettings);\n\n      return updatedSettings;\n\n    case 'updateSound':\n      const { name, volume } = action.payload;\n      updatedSettings = {\n        ...state,\n        sound: {\n          name,\n          volume,\n        },\n      };\n      setToStorage('settings', updatedSettings);\n\n      return updatedSettings;\n\n    case 'updateAutostart':\n      const autostart = action.payload;\n      updatedSettings = {\n        ...state,\n        autostart,\n      };\n      setToStorage('settings', updatedSettings);\n\n      return updatedSettings;\n    case 'updateNotification':\n      const notification = action.payload;\n      updatedSettings = {\n        ...state,\n        notification,\n      };\n\n      setToStorage('settings', updatedSettings);\n\n      return updatedSettings;\n\n    default:\n      throw new Error();\n  }\n}\n\ntype SettingsContextType = [Settings, React.Dispatch<ACTIONTYPE>];\nconst SettingsContext = createContext<SettingsContextType | null>(null);\n\ninterface SettingsProviderProps {\n  children: React.ReactNode;\n}\n\nfunction SettingsProvider({ children }: SettingsProviderProps): JSX.Element {\n  const [settings, dispatch] = useReducer(reducer, getInitialState());\n\n  useEffect(() => {\n    Notification.requestPermission().then(permission => {\n      if (permission === 'denied') {\n        dispatch({ type: 'updateNotification', payload: false });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    root.style.setProperty('--color-main', settings.selectedColor);\n  }, [settings.selectedColor]);\n\n  return (\n    <SettingsContext.Provider value={[settings, dispatch]}>\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nfunction useSettings(): SettingsContextType {\n  const context = useContext(SettingsContext);\n\n  if (!context) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n\n  return context;\n}\n\nexport { useSettings, SettingsProvider };\n","import styles from './NumberInput.module.css';\n\ninterface NumberInputProps {\n  min: number;\n  max: number;\n  label: string;\n  value: string;\n  onChange: (label: string, value: string) => void;\n}\n\nexport default function NumberInput({\n  min,\n  max,\n  label,\n  value,\n  onChange,\n}: NumberInputProps): JSX.Element {\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = e.target;\n    onChange(name, value);\n  }\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.label} htmlFor={label}>\n        {label}\n      </label>\n      <input\n        className={styles.input}\n        id={label}\n        name={label}\n        min={min}\n        max={max}\n        type=\"number\"\n        value={value}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","import {\n  SliderInput,\n  SliderTrack,\n  SliderRange,\n  SliderHandle,\n  SliderMarker,\n} from '@reach/slider';\nimport '@reach/slider/styles.css';\nimport { useMemo } from 'react';\nimport debounce from 'lodash.debounce';\n\ninterface VolumeSliderProps {\n  volume: number;\n  onChange: (value: number) => void;\n}\n\nexport default function VolumeSlider({ volume, onChange }: VolumeSliderProps) {\n  const markers = [25, 50, 75];\n\n  function handleChange(value: number) {\n    onChange(value);\n  }\n\n  const debouncedHandler = useMemo(() => debounce(handleChange, 200), []);\n\n  return (\n    <SliderInput\n      onChange={value => debouncedHandler(value)}\n      min={0}\n      max={100}\n      step={5}\n      value={volume}\n    >\n      <SliderTrack>\n        <SliderRange />\n        {markers.map(value => (\n          <SliderMarker key={`marker${value}`} value={value} />\n        ))}\n        <SliderHandle />\n      </SliderTrack>\n    </SliderInput>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\n\ninterface UseSoundType {\n  play: () => void;\n}\n\nexport default function useSound(\n  src: string,\n  { volume, duration = 500 }: { volume: number; duration: number },\n): UseSoundType {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const [audio] = useState(() => {\n    const newAudio = new Audio(src);\n    newAudio.volume = volume / 100;\n    return newAudio;\n  });\n\n  const play = useCallback(() => {\n    setIsPlaying(true);\n  }, []);\n\n  useEffect(() => {\n    audio.src = src;\n  }, [src, audio]);\n\n  useEffect(() => {\n    audio.volume = volume / 100;\n  }, [volume, audio]);\n\n  useEffect(() => {\n    let timerId: number;\n    if (isPlaying) {\n      audio.play();\n      timerId = window.setTimeout(() => {\n        setIsPlaying(false);\n      }, duration);\n    } else {\n      audio.pause();\n      audio.currentTime = 0;\n    }\n    return () => window.clearTimeout(timerId);\n  }, [isPlaying, audio, duration]);\n\n  return { play };\n}\n","const sounds = {\n  'Analog Alarm': '/Pomodoro/audio/Analog Alarm.mp3',\n  Ding: '/Pomodoro/audio/Ding.mp3',\n  'Digital Alarm': '/Pomodoro/audio/Digital Alarm.mp3',\n};\n\ntype Sounds = keyof typeof sounds;\ntype Colors = '#f67174' | '#75f3f7' | '#d880f5';\n\nconst colors: {\n  name: string;\n  value: Colors;\n}[] = [\n  { name: 'red', value: '#f67174' },\n  { name: 'blue', value: '#75f3f7' },\n  { name: 'purple', value: '#d880f5' },\n];\n\nexport { sounds, colors };\nexport type { Sounds, Colors };\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\nenum Status {\n  Started = 'STARTED',\n  Paused = 'PAUSED',\n}\n\nexport type StatusText = 'pause' | 'start';\n\ninterface UseTimerType {\n  statusText: StatusText;\n  currentTime: number;\n\n  toggle: () => void;\n  reset: () => void;\n}\n\nexport default function useTimer(\n  initialTime: number,\n  autoplay: boolean,\n  autostart: boolean,\n  onTimeEnd: () => void,\n): UseTimerType {\n  const [status, setStatus] = useState(Status.Paused);\n  const [currentTime, setCurrentTime] = useState(initialTime);\n\n  const timerId = useRef(0);\n\n  useEffect(() => {\n    setCurrentTime(initialTime);\n    if (autoplay && autostart) {\n      setStatus(Status.Started);\n    } else {\n      setStatus(Status.Paused);\n    }\n  }, [initialTime, autoplay, autostart]);\n\n  useEffect(() => {\n    if (status === Status.Started) {\n      timerId.current = window.setInterval(\n        () => setCurrentTime(currentTime => currentTime - 1),\n        1000,\n      );\n    }\n\n    if (status === Status.Paused) {\n      window.clearInterval(timerId.current);\n    }\n\n    if (status === Status.Started && currentTime === 0) {\n      setStatus(Status.Paused);\n      onTimeEnd();\n    }\n\n    return () => {\n      window.clearInterval(timerId.current);\n    };\n  }, [status, currentTime, onTimeEnd]);\n\n  const toggle = useCallback(() => {\n    if (currentTime < 1) {\n      return;\n    }\n    if (status === Status.Paused) {\n      setStatus(Status.Started);\n    } else {\n      setStatus(Status.Paused);\n    }\n  }, [status, currentTime]);\n\n  const reset = useCallback(() => {\n    window.clearInterval(timerId.current);\n    setStatus(Status.Paused);\n    setCurrentTime(initialTime);\n  }, [initialTime]);\n\n  return {\n    statusText: status === Status.Started ? 'pause' : 'start',\n    currentTime,\n    toggle,\n    reset,\n  };\n}\n","import { useState } from 'react';\nimport { Dialog } from '@reach/dialog';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { Listbox, ListboxList, ListboxOption } from '@reach/listbox';\nimport '@reach/listbox/styles.css';\n\nimport { initialSettings, useSettings } from '../../context/SettingsContext';\nimport NumberInput from '../NumberInput/NumberInput';\nimport VolumeSlider from '../VolumeSlider/VolumeSlider';\nimport useSound from '../Pomodoro/useSound';\nimport { sounds, colors as colorsList, Colors, Sounds } from '../../constants';\n\nimport styles from './SettingsModal.module.css';\ninterface SettingsModalProps {\n  isOpen: boolean;\n  close: () => void;\n}\n\nexport default function SettingsModal({\n  isOpen,\n  close,\n}: SettingsModalProps): JSX.Element {\n  const [settings, dispatch] = useSettings();\n\n  const [timers, setTimers] = useState(\n    settings.timers.reduce<Record<string, string>>((prev, curr) => {\n      prev[curr.label] = (curr.time / 60).toString();\n      return prev;\n    }, {}),\n  );\n\n  const [colors, setColors] = useState(\n    [...colorsList].map(color =>\n      color.value === settings.selectedColor\n        ? { ...color, checked: true }\n        : { ...color, checked: false },\n    ),\n  );\n\n  const soundsList = Object.keys(sounds);\n  const [currentSound, setCurrentSound] = useState<Sounds>(settings.sound.name);\n  const [volume, setVolume] = useState(settings.sound.volume);\n  const soundSrc = `${sounds[currentSound]}`;\n  const { play } = useSound(soundSrc, { volume, duration: 500 });\n\n  const [autostart, setAutostart] = useState(settings.autostart);\n\n  const [notification, setNotification] = useState(settings.notification);\n\n  function handleApply(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch({\n      type: 'updateTimers',\n      payload: Object.entries(timers).map(([label, value]) => ({\n        label,\n        time: Number(value) * 60,\n      })),\n    });\n\n    const selectedColor = colors.find(color => color.checked)?.value as Colors;\n    if (selectedColor !== settings.selectedColor) {\n      dispatch({\n        type: 'updateColor',\n        payload: selectedColor,\n      });\n    }\n\n    if (\n      currentSound !== settings.sound.name ||\n      volume !== settings.sound.volume\n    ) {\n      dispatch({\n        type: 'updateSound',\n        payload: {\n          name: currentSound,\n          volume,\n        },\n      });\n    }\n\n    if (autostart !== settings.autostart) {\n      dispatch({\n        type: 'updateAutostart',\n        payload: autostart,\n      });\n    }\n\n    if (notification !== settings.notification) {\n      dispatch({\n        type: 'updateNotification',\n        payload: notification,\n      });\n    }\n\n    close();\n  }\n\n  function handleTimerChange(label: string, value: string) {\n    setTimers({ ...timers, [label]: value });\n  }\n\n  function handleChangeColor(e: React.ChangeEvent<HTMLInputElement>) {\n    const selectedColor = e.target.value;\n    setColors(\n      colors.map(color =>\n        color.value === selectedColor\n          ? { ...color, checked: true }\n          : { ...color, checked: false },\n      ),\n    );\n  }\n\n  function handleSoundChange(value: string) {\n    setCurrentSound(value as Sounds);\n    play();\n  }\n\n  function handleVolumeChange(value: number) {\n    setVolume(value);\n    play();\n  }\n\n  function handleAutostartChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setAutostart(!autostart);\n  }\n\n  function handleNotificationChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setNotification(!notification);\n  }\n\n  function handleResetSettings() {\n    const { timers, selectedColor, sound, autostart, notification } =\n      initialSettings;\n\n    setTimers(\n      timers.reduce<Record<string, string>>((prev, curr) => {\n        prev[curr.label] = (curr.time / 60).toString();\n        return prev;\n      }, {}),\n    );\n    setColors(\n      [...colorsList].map(color =>\n        color.value === selectedColor\n          ? { ...color, checked: true }\n          : { ...color, checked: false },\n      ),\n    );\n\n    setCurrentSound(sound.name);\n    setVolume(sound.volume);\n    setAutostart(autostart);\n    setNotification(notification);\n  }\n\n  return (\n    <Dialog isOpen={isOpen} onDismiss={close} aria-label=\"settings\">\n      <div className={styles.header}>\n        <h2 className={styles.heading}>Settings</h2>\n        <button className={styles.close} onClick={close}>\n          <VisuallyHidden>Close</VisuallyHidden>\n          <span aria-hidden>×</span>\n        </button>\n      </div>\n      <hr className={styles.breakLine} />\n      <form className={styles.form} onSubmit={handleApply}>\n        <ul>\n          <li className={styles.settingsItem}>\n            <span className={styles.subHeading}>Time (minutes)</span>\n            <div className={styles.time}>\n              {Object.entries(timers).map(([label, time]) => (\n                <NumberInput\n                  key={label}\n                  label={label}\n                  max={90}\n                  min={1}\n                  value={time}\n                  onChange={handleTimerChange}\n                />\n              ))}\n            </div>\n          </li>\n          <li className={styles.settingsItem}>\n            <div className={styles.colors}>\n              <span className={styles.subHeading}>Color</span>\n              <div className={styles.colorsInputs} role=\"radiogroup\">\n                {colors.map(({ name, value, checked }) => (\n                  <label\n                    className={styles.radio}\n                    key={name}\n                    data-testid={value}\n                  >\n                    <span className={styles.radioInput}>\n                      <input\n                        type=\"radio\"\n                        name=\"color\"\n                        value={value}\n                        checked={checked}\n                        onChange={handleChangeColor}\n                      />\n                      <span\n                        className={styles.radioControl}\n                        style={{ backgroundColor: value }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"icon icon-tabler icon-tabler-check\"\n                          width=\"18\"\n                          height=\"16\"\n                          viewBox=\"0 0 24 24\"\n                          strokeWidth=\"2\"\n                          stroke=\"#171931\"\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M5 12l5 5l10 -10\" />\n                        </svg>\n                      </span>\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n          </li>\n          <li className={styles.settingsItem}>\n            <div className={styles.sound}>\n              <span className={styles.subHeading}>Alarm Sound</span>\n              <div>\n                <div className={styles.soundItem}>\n                  <span className={styles.soundSubheading}>Sound</span>\n                  <Listbox\n                    aria-labelledby=\"select sound\"\n                    value={currentSound}\n                    onChange={value => handleSoundChange(value)}\n                    portal={false}\n                    as=\"span\"\n                  >\n                    <ListboxList style={{ zIndex: 100 }}>\n                      {soundsList.map(value => (\n                        <ListboxOption key={value} value={value}>\n                          {value}\n                        </ListboxOption>\n                      ))}\n                    </ListboxList>\n                  </Listbox>\n                </div>\n                <div className={styles.soundItem}>\n                  <span className={styles.soundSubheading}>Volume</span>\n                  <VolumeSlider onChange={handleVolumeChange} volume={volume} />\n                </div>\n              </div>\n            </div>\n          </li>\n          <li className={styles.settingsItem}>\n            <div className={styles.autoStartWrapper}>\n              <label htmlFor=\"autoStart\" className={styles.subHeading}>\n                Auto start ?\n              </label>\n              <input\n                id=\"autoStart\"\n                type=\"checkbox\"\n                checked={autostart}\n                onChange={handleAutostartChange}\n              />\n            </div>\n          </li>\n          <li className={styles.settingsItem}>\n            <div className={styles.autoStartWrapper}>\n              <label htmlFor=\"notification\" className={styles.subHeading}>\n                Notification\n              </label>\n              <input\n                id=\"notification\"\n                type=\"checkbox\"\n                checked={notification}\n                onChange={handleNotificationChange}\n              />\n            </div>\n          </li>\n        </ul>\n\n        <div className={styles.buttonsWrapper}>\n          <button className={`${styles.button} ${styles.submit}`} type=\"submit\">\n            Apply\n          </button>\n          <button\n            className={`${styles.button} ${styles.reset}`}\n            type=\"button\"\n            onClick={handleResetSettings}\n          >\n            Reset\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import { timeToMinSec } from '../../utils/utils';\n\nimport styles from './Clock.module.css';\n\ninterface ClockProps {\n  time: number;\n}\n\nexport default function Clock({ time }: ClockProps): JSX.Element {\n  const { minutes, seconds } = timeToMinSec(time);\n  return (\n    <div className={styles.clock} data-testid=\"clock\">\n      {/* {timeToMinSec(time)} */}\n      <>\n        {minutes}\n        <span className={styles.semicolon}>:</span>\n        {seconds}\n      </>\n    </div>\n  );\n}\n","import styles from './ProgressRing.module.css';\n\ninterface ProgressRingProps {\n  radius: number;\n  stroke: number;\n  progress: number;\n  color: string;\n}\n\nexport default function ProgressRing({\n  radius,\n  stroke,\n  progress,\n  color,\n}: ProgressRingProps) {\n  const normalizedRadius = radius - stroke * 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n  return (\n    <svg height={radius * 2} width={radius * 2} className={styles.progressRing}>\n      <circle\n        stroke={color}\n        fill=\"transparent\"\n        strokeWidth={stroke}\n        strokeDasharray={circumference + ' ' + circumference}\n        style={{ strokeDashoffset }}\n        r={normalizedRadius}\n        cx={radius}\n        cy={radius}\n      />\n    </svg>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSettings } from '../../context/SettingsContext';\n\nimport Clock from '../Clock/Clock';\nimport { StatusText } from '../Pomodoro/useTimer';\nimport ProgressRing from '../ProgressRing/ProgressRing';\n\nimport styles from './Timer.module.css';\n\ninterface TimerProps {\n  statusText: StatusText;\n  initialTime: number;\n  currentTime: number;\n  toggle: () => void;\n  reset: () => void;\n}\n\nexport default function Timer({\n  statusText,\n  currentTime,\n  initialTime,\n  toggle,\n  reset,\n}: TimerProps): JSX.Element {\n  const [progress, setProgress] = useState(100);\n  const [{ selectedColor }] = useSettings();\n\n  useEffect(() => {\n    setProgress(Math.floor((currentTime / initialTime) * 100));\n  }, [currentTime, initialTime]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <button\n          onClick={toggle}\n          data-testid=\"toggle\"\n          disabled={currentTime === 0}\n          className={styles.timer}\n        >\n          <ProgressRing\n            progress={progress}\n            radius={140}\n            stroke={8}\n            color={selectedColor}\n          />\n          <Clock time={currentTime} />\n          <p className={styles.status}>{statusText}</p>\n        </button>\n        <button className={styles.reset} onClick={reset} data-testid=\"reset\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"icon icon-tabler icon-tabler-refresh\"\n            width=\"28\"\n            height=\"28\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"#75f3f7\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\" />\n            <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport '@reach/dialog/styles.css';\n\nimport { useSettings } from '../../context/SettingsContext';\nimport SettingsModal from '../SettingsModal/SettingsModal';\nimport useTimer from './useTimer';\nimport useSound from './useSound';\nimport Timer from '../Timer/Timer';\nimport { sounds } from '../../constants';\nimport { timeToMinSec } from '../../utils/utils';\n\nimport styles from './Pomodoro.module.css';\n\nexport default function Pomodoro(): JSX.Element {\n  const [{ timers, sound, autostart }] = useSettings();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const selectedTimer = timers[selectedTabIndex];\n\n  const pomoroCounter = useRef(0);\n  //if true will autoStart next timer\n  const [autoplay, setAutoplay] = useState(false);\n\n  const soundSrc = `${sounds[sound.name]}`;\n  const { play } = useSound(soundSrc, {\n    volume: sound.volume,\n    duration: 2000,\n  });\n\n  //work, short break, work, long break\n  const startNextTimer = useCallback(() => {\n    pomoroCounter.current++;\n\n    if (selectedTabIndex === 1) {\n      setSelectedTabIndex(0);\n      return;\n    }\n\n    if (selectedTabIndex === 0 && pomoroCounter.current === 1) {\n      setSelectedTabIndex(1);\n      return;\n    }\n\n    if (selectedTabIndex === 0 && pomoroCounter.current === 3) {\n      setSelectedTabIndex(2);\n      return;\n    }\n\n    if (selectedTabIndex === 2) {\n      setAutoplay(false);\n      pomoroCounter.current = 0;\n    }\n  }, [selectedTabIndex]);\n\n  const onTimeEnd = useCallback(() => {\n    play();\n\n    if (window.Notification && Notification.permission !== 'denied') {\n      new Notification('Pomodoro', {\n        body: 'Your time is up!',\n        silent: true,\n      });\n    }\n\n    if (autostart) {\n      setTimeout(() => {\n        startNextTimer();\n      }, 1000);\n    }\n  }, [play, autostart, startNextTimer]);\n\n  const { statusText, currentTime, toggle, reset } = useTimer(\n    selectedTimer.time,\n    autostart,\n    autoplay,\n    onTimeEnd,\n  );\n\n  const [showDialog, setShowDialog] = useState(false);\n  const open = () => setShowDialog(true);\n  const close = () => setShowDialog(false);\n\n  function handleTabsChange(index: number) {\n    setSelectedTabIndex(index);\n  }\n\n  function handleToggle() {\n    toggle();\n    if (selectedTabIndex === 0) {\n      setAutoplay(true);\n    }\n  }\n\n  useEffect(() => {\n    const { minutes, seconds } = timeToMinSec(currentTime);\n    document.title = `${minutes}:${seconds}`;\n  }, [currentTime]);\n\n  useEffect(() => {\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.code === 'Space' && e.target === document.body) {\n        toggle();\n        if (selectedTabIndex === 0) {\n          setAutoplay(true);\n        }\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [toggle, selectedTabIndex]);\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.heading}>Pomodoro</h1>\n      <div>\n        <div className={styles.tabList}>\n          {timers.map(({ label }, tabIndex) => (\n            <button\n              className={`${styles.tab} ${\n                tabIndex === selectedTabIndex ? styles.selectedTab : ''\n              }`}\n              key={label}\n              onClick={() => handleTabsChange(tabIndex)}\n            >\n              {label}\n            </button>\n          ))}\n        </div>\n        <div className={styles.tabPanel}>\n          <Timer\n            statusText={statusText}\n            initialTime={selectedTimer.time}\n            currentTime={currentTime}\n            toggle={handleToggle}\n            reset={reset}\n          />\n        </div>\n      </div>\n\n      <div className={styles.footer}>\n        <button onClick={open} data-testid=\"settings\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"icon icon-tabler icon-tabler-settings\"\n            width=\"28\"\n            height=\"28\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"#75f3f7\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z\" />\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\n          </svg>\n        </button>\n      </div>\n      <SettingsModal isOpen={showDialog} close={close} />\n    </div>\n  );\n}\n","import Pomodoro from './components/Pomodoro/Pomodoro';\nimport { SettingsProvider } from './context/SettingsContext';\n\nexport default function App() {\n  return (\n    <SettingsProvider>\n      <Pomodoro />\n    </SettingsProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}